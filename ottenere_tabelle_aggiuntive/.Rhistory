library('plot.matrix')
library("corrplot")
library(ggplot2)
library(viridis)
library(hrbrthemes)
library(magick)
library(survival)
library(survminer)
load('time_alive.RData')
MDS_data <- cbind(MDS_data, time_alive)
MDS_data <- MDS_data[ixd_keep,]
############################################################################################
#CLUSTERING WITH K=6
nk <- 6
gene_groups_6 <- gene_groups[,nk]
MDS_data_KNN_6 <- cbind(MDS_data, gene_groups_6)
obj = pairwise_survdiff(Surv(time_alive, fup_status==1) ~ gene_groups_6, data = MDS_data_KNN_6)
col<- colorRampPalette(c("#f9b0c3", "#a5042e"))(20)
x11()
corrplot(obj[["p.value"]],type="lower", method="number",
#title= "Pairwise comparisons using Log-Rank test",
is.corr = FALSE, insig= "p-value", col = col)
x11()
fit <- survfit(Surv(MDS_data_KNN_6$time_alive, MDS_data_KNN_6$fup_status==1) ~ gene_groups_6, data = MDS_data_KNN_6)
ggsurvplot(fit,
data = MDS_data_KNN_6,
risk.table = FALSE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
palette = my_col,
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
#legend.labs=c("Group 1","Group 2","Group 3"), #legend.title="Bersanelli's Groups",
break.time.by=365,
censor.size = 2)
#title="Kaplan-Meier Curve for MDS Survival with KNN")
#HIGH PVALUE PAIRS
high.pval.pairs <- as.matrix(which(obj$p.value > 0.10, arr.ind = T))
n_pairs <- dim(high.pval.pairs)[1]
rownames(high.pval.pairs) <- 1:n_pairs
high.pval.pairs[,1] <- high.pval.pairs[,1]+1
#FIND VAR BETWEEN - WITHIN FOR ALL GROUPS AND FIND PAIR WITH SMALLER ONE
var_w_tot.min <- NULL
selected_pairs <- NULL
var_w_tot <- rep(0,n_pairs)
for(i in 1:n_pairs){
curr_groups <- gene_groups_6
curr_groups[which(curr_groups == max(high.pval.pairs[i,]) )] <- min(high.pval.pairs[i,])
curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] <- curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] - 1
curr_b_w <- var_b_w(curr_groups, 5)
var_w_tot[i] <- curr_b_w$var.w / (curr_b_w$var.b + curr_b_w$var.w)
}
selected_pair.idx <- which.min(var_w_tot)
selected_pairs <- rbind(selected_pairs, high.pval.pairs[selected_pair.idx,])
var_w_tot.min <- c(var_w_tot.min, var_w_tot[selected_pair.idx])
###########################################################################################################
#CLUSTERING WITH K=5
gene_groups_5 <- gene_groups_6
gene_groups_5[which(gene_groups_5== max(high.pval.pairs[selected_pair.idx,]) )] <- min(high.pval.pairs[selected_pair.idx,])
gene_groups_5[which(gene_groups_5 > max(high.pval.pairs[selected_pair.idx,]) )] <- gene_groups_5[which(gene_groups_5 > max(high.pval.pairs[selected_pair.idx,]) )] - 1
MDS_data_KNN_5 <- cbind(MDS_data, gene_groups_5)
obj = pairwise_survdiff(Surv(time_alive, fup_status==1) ~ gene_groups_5, data = MDS_data_KNN_5)
col<- colorRampPalette(c("#f9b0c3", "#a5042e"))(20)
x11()
corrplot(obj[["p.value"]],type="lower", method="number",
#title= "Pairwise comparisons using Log-Rank test",
is.corr = FALSE, insig= "p-value", col = col)
x11()
fit <- survfit(Surv(MDS_data_KNN_5$time_alive, MDS_data_KNN_5$fup_status==1) ~ gene_groups_5, data = MDS_data_KNN_5)
ggsurvplot(fit,
data = MDS_data_KNN_5,
risk.table = FALSE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
palette = my_col,
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
#legend.labs=c("Group 1","Group 2","Group 3"), #legend.title="Bersanelli's Groups",
break.time.by=365,
censor.size = 2)
#title="Kaplan-Meier Curve for MDS Survival with KNN")
#high value pvalue
high.pval.pairs <- as.matrix(which(obj$p.value > 0.10, arr.ind = T))
n_pairs <- dim(high.pval.pairs)[1]
rownames(high.pval.pairs) <- 1:n_pairs
high.pval.pairs[,1] <- high.pval.pairs[,1]+1
#find minimal one
var_w_tot <- rep(0,n_pairs)
for(i in 1:n_pairs){
curr_groups <- gene_groups_5
curr_groups[which(curr_groups == max(high.pval.pairs[i,]) )] <- min(high.pval.pairs[i,])
curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] <- curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] - 1
curr_b_w <- var_b_w(curr_groups, 4)
var_w_tot[i] <- curr_b_w$var.w / (curr_b_w$var.b + curr_b_w$var.w)
}
selected_pair.idx <- which.min(var_w_tot)
selected_pairs <- rbind(selected_pairs, high.pval.pairs[selected_pair.idx,])
var_w_tot.min <- c(var_w_tot.min, var_w_tot[selected_pair.idx])
##################################################################################################
#CLUSTERING WITH K=4
gene_groups_4 <- gene_groups_5
gene_groups_4[which(gene_groups_4== max(high.pval.pairs[selected_pair.idx,]) )] <- min(high.pval.pairs[selected_pair.idx,])
gene_groups_4[which(gene_groups_4 > max(high.pval.pairs[selected_pair.idx,]) )] <- gene_groups_4[which(gene_groups_4 > max(high.pval.pairs[selected_pair.idx,]) )] - 1
MDS_data_KNN_4 <- cbind(MDS_data, gene_groups_4)
obj = pairwise_survdiff(Surv(time_alive, fup_status==1) ~ gene_groups_4, data = MDS_data_KNN_4)
col<- colorRampPalette(c("#f9b0c3", "#a5042e"))(20)
x11()
corrplot(obj[["p.value"]],type="lower", method="number",
#title= "Pairwise comparisons using Log-Rank test",
is.corr = FALSE, insig= "p-value", col = col)
x11()
fit <- survfit(Surv(MDS_data_KNN_4$time_alive, MDS_data_KNN_4$fup_status==1) ~ gene_groups_4, data = MDS_data_KNN_4)
ggsurvplot(fit,
data = MDS_data_KNN_4,
risk.table = FALSE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
palette = my_col,
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
#legend.labs=c("Group 1","Group 2","Group 3"), #legend.title="Bersanelli's Groups",
break.time.by=365,
censor.size = 2)
#title="Kaplan-Meier Curve for MDS Survival with KNN")
#high value pvalue
high.pval.pairs <- as.matrix(which(obj$p.value > 0.05, arr.ind = T))
n_pairs <- dim(high.pval.pairs)[1]
rownames(high.pval.pairs) <- 1:n_pairs
high.pval.pairs[,1] <- high.pval.pairs[,1]+1
#find minimal one
var_w_tot <- rep(0,n_pairs)
for(i in 1:n_pairs){
curr_groups <- gene_groups_4
curr_groups[which(curr_groups == max(high.pval.pairs[i,]) )] <- min(high.pval.pairs[i,])
curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] <- curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] - 1
curr_b_w <- var_b_w(curr_groups, 3)
var_w_tot[i] <- curr_b_w$var.w / (curr_b_w$var.b + curr_b_w$var.w)
}
selected_pair.idx <- which.min(var_w_tot)
selected_pairs <- rbind(selected_pairs, high.pval.pairs[selected_pair.idx,])
var_w_tot.min <- c(var_w_tot.min, var_w_tot[selected_pair.idx])
########################################################################################################
#CLUSTERING WITH K=3
gene_groups_3 <- gene_groups_4
gene_groups_3[which(gene_groups_3== max(high.pval.pairs[selected_pair.idx,]) )] <- min(high.pval.pairs[selected_pair.idx,])
gene_groups_3[which(gene_groups_3 > max(high.pval.pairs[selected_pair.idx,]) )] <- gene_groups_3[which(gene_groups_3 > max(high.pval.pairs[selected_pair.idx,]) )] - 1
MDS_data_KNN_4 <- cbind(MDS_data, gene_groups_3)
obj = pairwise_survdiff(Surv(time_alive, fup_status==1) ~ gene_groups_3, data = MDS_data_KNN_4)
col<- colorRampPalette(c("#f9b0c3", "#a5042e"))(20)
x11()
corrplot(obj[["p.value"]],type="lower", method="number",
#title= "Pairwise comparisons using Log-Rank test",
is.corr = FALSE, insig= "p-value", col = col)
x11()
fit <- survfit(Surv(MDS_data_KNN_4$time_alive, MDS_data_KNN_4$fup_status==1) ~ gene_groups_3, data = MDS_data_KNN_4)
ggsurvplot(fit,
data = MDS_data_KNN_4,
risk.table = FALSE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
palette = my_col,
ggtheme = theme_bw(), # Change ggplot2 theme
#legend.labs=c("Group 1","Group 2","Group 3"), #legend.title="Bersanelli's Groups",
break.time.by=365,
censor.size = 2)
#title="Kaplan-Meier Curve for MDS Survival with KNN")
#high value pvalue
high.pval.pairs <- as.matrix(which(obj$p.value > 0.05, arr.ind = T))
n_pairs <- dim(high.pval.pairs)[1]
rownames(high.pval.pairs) <- 1:n_pairs
high.pval.pairs[,1] <- high.pval.pairs[,1]+1
#find minimal one
var_w_tot <- rep(0,n_pairs)
for(i in 1:n_pairs){
curr_groups <- gene_groups_3
curr_groups[which(curr_groups == max(high.pval.pairs[i,]) )] <- min(high.pval.pairs[i,])
curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] <- curr_groups[which(curr_groups > max(high.pval.pairs[i,]) )] - 1
curr_b_w <- var_b_w(curr_groups, 2)
var_w_tot[i] <- curr_b_w$var.w / (curr_b_w$var.b + curr_b_w$var.w)
}
selected_pair.idx <- which.min(var_w_tot)
selected_pairs <- rbind(selected_pairs, high.pval.pairs[selected_pair.idx,])
var_w_tot.min <- c(var_w_tot.min, var_w_tot[selected_pair.idx])
rm(list=ls())
library(RColorBrewer) #Colors
my_col = brewer.pal(12,'Set3')
my_col[2] <- "#FAF25A"
load("MDS_data_20210323.RData")
load("gene_groups.RData")
load("var_b_w.RData")
genes <- MDS_data[,38:84]
n <- dim(genes)[1]
na_per_col <- colSums(is.na(genes))         #NA in each columns
col_keep <- which(na_per_col <= 0.1*n)
genes <- genes[,col_keep]                   #I keep only the columns with less than 10% of NA
na_per_row <- rowSums(is.na(genes))         #NA in each row
ixd_keep <- which(na_per_row <= 3)          #I keep only the rows with not more than 3 NA
genes <- genes[ixd_keep,]
genes[is.na(genes)] <- 0
install.packages("fda")
rm(list = ls())
graphics.off()
library(cluster)
load("MDS_data_20210323.RData")
load("all_genes.RData")
load("gene_dist2.RData")     #metrica personalizzata
load('var_b_w_MDS.RData')
genes <- MDS_data[,38:84]
n <- dim(genes)[1]
original_groups <- MDS_data$genomic_group   #original genomic groups
na_per_col <- colSums(is.na(genes))         #NA in each columns
col_keep <- which(na_per_col <= 0.1*n)
genes <- genes[,col_keep]                   #I keep only the columns with less than 10% of NA
na_per_row <- rowSums(is.na(genes))         #NA in each row
ixd_keep <- which(na_per_row <= 3)          #I keep all th
#ATTENZIONE: QUI NON MISCHIO LE RIGHE AL CONTRARIO DI clu_gene_dist2, verrano clustering diversi
genes <- genes[ixd_keep,]
original_groups <- original_groups[ixd_keep]
genes[is.na(genes)] <- 0                   #I set to zero the remaining NA
genes.names <- colnames(genes)
n <- dim(genes)[1]
p <- dim(genes)[2]
rm(list = ls())
graphics.off()
library(cluster)
load("MDS_data_20210323.RData")
load("all_genes.RData")
load("gene_dist2.RData")     #metrica personalizzata
load('var_b_w_MDS.RData')
genes <- MDS_data[,38:84]
n <- dim(genes)[1]
original_groups <- MDS_data$genomic_group   #original genomic groups
na_per_col <- colSums(is.na(genes))         #NA in each columns
col_keep <- which(na_per_col <= 0.1*n)
genes <- genes[,col_keep]                   #I keep only the columns with less than 10% of NA
na_per_row <- rowSums(is.na(genes))         #NA in each row
ixd_keep <- which(na_per_row <= 3)          #I keep all th
#ATTENZIONE: QUI NON MISCHIO LE RIGHE AL CONTRARIO DI clu_gene_dist2, verrano clustering diversi
genes <- genes[ixd_keep,]
genes[is.na(genes)] <- 0
rm(list=ls())
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
tab <- read.csv('citations_per_country.csv')
setwd("C:/Users/carlo/Desktop/Progetto_nonparam/ottenere_tabelle_aggiuntive")
tab <- read.csv('citations_per_country.csv')
View(tab)
tab <- read.csv('citations_per_country.csv', sep=';')
View(tab)
iso2 <- read.table('ido2_code.txt')
iso2 <- read.table('iso2_code.txt')
iso2 <- read.table('iso2_codes.txt')
iso2 <- read.table('iso2_codes.txt', sep='\t')
View(iso2)
iso2 <- read.csv('iso2codes.csv')
View(iso2)
iso2 <- iso2[,c(1,2)]
library(dplyr)
tab_new <- tab %>%
inner_join(iso2, by='Country')
View(tab_new)
tab_new$H.index/tab_new$Citations
tab_new <- tab_new[, c(10, 8)]
Eco_data_UR <- read.csv('Eco_data_UR_11_10_21.csv', header = T)
View(Eco_data_UR)
colnames(tab_new)[1] <- 'Country'
Eco_data_UR_new <- Eco_data_UR %>%
inner_join(tab_new, by='Country')
View(Eco_data_UR_new)
View(tab_new)
View(tab)
rm(list=ls())
tab <- read.csv('citations_per_country.csv', sep=';')
iso2 <- read.csv('iso2codes.csv')
iso2 <- iso2[,c(1,2)]
#attacco i codici iso
library(dplyr)
tab_new <- tab %>%
inner_join(iso2, by='Country')
View(tab_new)
rm(list=ls())
tab1 <- read.table('academic_staff.tsv', sep='\t', header=T)
write.table(tab1[[1]], file='temp.txt', row.names = F, quote = F, col.names = F)
tab2 <- read.table('temp.txt', sep=',')
colnames(tab2) <- c('unit_measure', 'ISCED11', 'age', 'sex', 'country')
tab <- cbind(tab2, tab1[,2:8])
tab <- lapply(tab, gsub, pattern='p', replacement='')
tab <- lapply(tab, gsub, pattern='b', replacement='')
tab <- lapply(tab, gsub, pattern='e', replacement='')
tab <- lapply(tab, gsub, pattern='d', replacement='')
tab <- lapply(tab, gsub, pattern=':', replacement=NA)
tab <- data.frame(tab)
tab <- tab[which(tab$sex=='T' & tab$age=='TOTAL' & tab$ISCED11=='ED5-8'),]
num_tab <- tab[,6:12]
num_tab <- sapply(num_tab, as.character)
num_tab <- matrix(data=sapply(num_tab, as.numeric), ncol=7, nrow=37)
acad_staff <- data.frame(cbind(country = as.character(tab$country),
num_staff = rowMeans(num_tab, na.rm = T)))
###############################################################################################
tab1 <- read.table('stud_aca_staff_ratio.tsv', sep='\t', header=T)
write.table(tab1[[1]], file='temp.txt', row.names = F, quote = F, col.names = F)
tab2 <- read.table('temp.txt', sep=',')
colnames(tab2) <- c('unit_measure', 'ISCED11', 'country')
tab <- cbind(tab2, tab1[,2:8])
tab <- lapply(tab, gsub, pattern='p', replacement='')
tab <- lapply(tab, gsub, pattern='b', replacement='')
tab <- lapply(tab, gsub, pattern='e', replacement='')
tab <- lapply(tab, gsub, pattern='d', replacement='')
tab <- lapply(tab, gsub, pattern=':', replacement=NA)
tab <- data.frame(tab)
tab <- tab[which(tab$ISCED11=='ED5-8'),]
num_tab <- tab[,4:10]
num_tab <- sapply(num_tab, as.character)
num_tab <- matrix(data=sapply(num_tab, as.numeric), ncol=7, nrow=36)
stud_per_staff <- cbind(country = as.character(tab$country),
stud_per_staff = rowMeans(num_tab, na.rm = T))
#sistema errori
stud_per_staff <- rbind(stud_per_staff, c('CH', 300000/34775))
stud_per_staff[2,2] <- 80000/10122
stud_per_staff[18,2] <- 220000/9345.5
stud_per_staff <- data.frame(stud_per_staff)
View(acad_staff)
View(stud_per_staff)
View(tab)
View(tab1)
stud_per_staff$country
acad_staff$num_staff
acad_staff$country
library(dplyr)
ris <- acad_staff%>%
right_join(stud_per_staff, by='country')
ris$country
eco_tab <- read.csv('Eco_data_UR.csv', header = T, sep=';')
colnames(ris)[1] <- 'Country'
eco_tab$Country
iso2 <- read.csv('iso2codes.csv')
iso2 <- iso2[,c(1,2)]
View(iso2)
#sistemo i nomi sbagliati
ris$Country[37] <- 'GB'
#sistemo i nomi sbagliati
ris$Country <- as.character(ris$Country)
ris$Country[37] <- 'GB'
ris$Country
eco_tab$Country
rm(list=ls())
tab1 <- read.table('academic_staff.tsv', sep='\t', header=T)
write.table(tab1[[1]], file='temp.txt', row.names = F, quote = F, col.names = F)
tab2 <- read.table('temp.txt', sep=',')
colnames(tab2) <- c('unit_measure', 'ISCED11', 'age', 'sex', 'country')
tab <- cbind(tab2, tab1[,2:8])
tab <- lapply(tab, gsub, pattern='p', replacement='')
tab <- lapply(tab, gsub, pattern='b', replacement='')
tab <- lapply(tab, gsub, pattern='e', replacement='')
tab <- lapply(tab, gsub, pattern='d', replacement='')
tab <- lapply(tab, gsub, pattern=':', replacement=NA)
tab <- data.frame(tab)
tab <- tab[which(tab$sex=='T' & tab$age=='TOTAL' & tab$ISCED11=='ED5-8'),]
num_tab <- tab[,6:12]
num_tab <- sapply(num_tab, as.character)
num_tab <- matrix(data=sapply(num_tab, as.numeric), ncol=7, nrow=37)
acad_staff <- data.frame(cbind(country = as.character(tab$country),
num_staff = rowMeans(num_tab, na.rm = T)))
###############################################################################################
tab1 <- read.table('stud_aca_staff_ratio.tsv', sep='\t', header=T)
write.table(tab1[[1]], file='temp.txt', row.names = F, quote = F, col.names = F)
tab2 <- read.table('temp.txt', sep=',')
colnames(tab2) <- c('unit_measure', 'ISCED11', 'country')
tab <- cbind(tab2, tab1[,2:8])
tab <- lapply(tab, gsub, pattern='p', replacement='')
tab <- lapply(tab, gsub, pattern='b', replacement='')
tab <- lapply(tab, gsub, pattern='e', replacement='')
tab <- lapply(tab, gsub, pattern='d', replacement='')
tab <- lapply(tab, gsub, pattern=':', replacement=NA)
tab <- data.frame(tab)
tab <- tab[which(tab$ISCED11=='ED5-8'),]
num_tab <- tab[,4:10]
num_tab <- sapply(num_tab, as.character)
num_tab <- matrix(data=sapply(num_tab, as.numeric), ncol=7, nrow=36)
stud_per_staff <- cbind(country = as.character(tab$country),
stud_per_staff = rowMeans(num_tab, na.rm = T))
#sistema errori
stud_per_staff <- rbind(stud_per_staff, c('CH', 300000/34775))
stud_per_staff[2,2] <- 80000/10122
stud_per_staff[18,2] <- 220000/9345.5
stud_per_staff <- data.frame(stud_per_staff)
###################################################################################
library(dplyr)
ris <- acad_staff%>%
right_join(stud_per_staff, by='country')
colnames(ris)[1] <- 'Country'
#sistemo i nomi sbagliati
ris$Country <- as.character(ris$Country)
ris$Country[37] <- 'GB'
ris$Country[11] <- 'GR'
###################################################################################
eco_tab <- read.csv('Eco_data_UR.csv', header = T, sep=';')
eco_tab_complete <- ris %>%
inner_join(eco_tab, by='Country')
write.csv(eco_tab_complete, file='Eco_data_UR_12_10_21.csv', row.names = F, quote = F)
rm(list=ls())
tab <- read.csv('citations_per_country.csv', sep=';')
iso2 <- read.csv('iso2codes.csv')
iso2 <- iso2[,c(1,2)]
#attacco i codici iso
library(dplyr)
tab_new <- tab %>%
inner_join(iso2, by='Country')
tab_new <- tab_new[, c(10, 8)]
colnames(tab_new)[1] <- 'Country'
Eco_data_UR <- read.csv('Eco_data_UR_12_10_21.csv', header = T)
Eco_data_UR_new <- Eco_data_UR %>%
inner_join(tab_new, by='Country')
View(iso2)
View(tab_new)
View(Eco_data_UR)
Eco_data_UR$Country
tab_new$Country
iso2$Country
Eco_data_UR_new <- tab_new %>%
inner_join(Eco_data_UR, by='Country')
levels(tab_new$Country)
tab_new$Country
levels(tab_new$Country)[2]
Eco_data_UR_new <- tab_new %>%
inner_join(Eco_data_UR, by='Country')
levels(Eco_data_UR$Country)[2]
levels(Eco_data_UR$Country)
rm(list=ls())
tab <- read.csv('citations_per_country.csv', sep=';')
iso2 <- read.csv('iso2codes.csv')
iso2 <- iso2[,c(1,2)]
#attacco i codici iso
library(dplyr)
tab_new <- tab %>%
inner_join(iso2, by='Country')
tab_new <- tab_new[, c(10, 8)]
colnames(tab_new)[1] <- 'Country'
Eco_data_UR <- read.csv('Eco_data_UR_12_10_21.csv', header = T)
Eco_data_UR_new <- tab_new %>%
semi_join(Eco_data_UR, by='Country')
View(Eco_data_UR_new)
Eco_data_UR_new <- tab_new %>%
inner_join(Eco_data_UR, by='Country')
View(Eco_data_UR_new)
levels(tab_new$Country) <- as.character(tab_new$Country)
as.character(tab_new$Country)
levels(tab_new$Country) <- as.character(tab_new$Country)
levels(tab_new$Country)
rm(list=ls())
tab <- read.csv('citations_per_country.csv', sep=';')
iso2 <- read.csv('iso2codes.csv')
iso2 <- iso2[,c(1,2)]
#attacco i codici iso
library(dplyr)
tab_new <- tab %>%
inner_join(iso2, by='Country')
View(tab_new)
tab_new <- tab_new[, c(10, 8)]
colnames(tab_new)[10] <- 'Country'
rm(list=ls())
tab <- read.csv('citations_per_country.csv', sep=';')
iso2 <- read.csv('iso2codes.csv')
iso2 <- iso2[,c(1,2)]
#attacco i codici iso
library(dplyr)
tab_new <- tab %>%
inner_join(iso2, by='Country')
tab_new <- tab_new[, c(10, 8)]
colnames(tab_new)[1] <- 'Country'
df_cit <- data.frame(country=as.character(tab_new$Country), cit_per_doc=tab_new$Citations.per.document)
View(df_cit)
df_cit
levels(df_cit$Country)
df_cit <- data.frame(country=as.factor(tab_new$Country), cit_per_doc=tab_new$Citations.per.document)
levels(df_cit$Country)
df_cit$Country
rm(list=ls())
tab <- read.csv('citations_per_country.csv', sep=';')
iso2 <- read.csv('iso2codes.csv')
iso2 <- iso2[,c(1,2)]
#attacco i codici iso
library(dplyr)
tab_new <- tab %>%
inner_join(iso2, by='Country')
tab_new <- tab_new[, c(10, 8)]
colnames(tab_new)[1] <- 'Country'
tab_new$Country
levels(droplevels(tab_new$Country))
levels(tab_new$Country) <- levels(droplevels(tab_new$Country))
tab_new$Country <- factor(droplevels(tab_new$Country))
tab_new$Country
Eco_data_UR <- read.csv('Eco_data_UR_12_10_21.csv', header = T)
Eco_data_UR_new <- tab_new %>%
inner_join(Eco_data_UR, by='Country')
tab_new$Country
droplevels(tab_new$Country)
Eco_data_UR <- read.csv('Eco_data_UR_12_10_21.csv', header = T)
Eco_data_UR$Country
View(tab)
View(iso2)
count(levels(tab_new$Country))
typeof(levels(tab_new$Country))
typeof(levels(Eco_data_UR$Country))
Eco_data_UR_new <- tbl_df(tab_new) %>%
inner_join(tbl_df(Eco_data_UR), by='Country')
Eco_data_UR_new <- as_tibble(tab_new) %>%
inner_join(as_tibble(Eco_data_UR), by='Country')
